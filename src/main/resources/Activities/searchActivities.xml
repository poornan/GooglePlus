<?xml version="1.0" encoding="UTF-8"?>
<template name="searchActivities" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="query" description="Activity Id in Google plus" />
    <parameter name="fields" description="Required Fields in response if null all the fields will in response" />
    <parameter name="maxResults" description="Required Fields in response if null max of 20 results will in response" />
    <parameter name="pageToken" description="Required Fields in response if null all the fields will in response" />
    <parameter name="orderBy" description="Required Fields in response if null all the fields will in response" />
    <parameter name="language" description="Required Fields in response if null all the fields will in response" />


    <sequence>
        <property name="uri.var.query" expression="$func:query" />
        <property name="uri.var.fields" expression="$func:fields" />
        <property name="uri.var.maxResults" expression="$func:maxResults" />
        <property name="uri.var.pageToken" expression="$func:pageToken" />
        <property name="uri.var.orderBy" expression="$func:orderBy" />
        <property name="uri.var.language" expression="$func:language" />

        <!-- Building the URL with the parameters for the API method -->
        <filter xpath="(not(get-property('uri.var.query') = '' or (not(string(get-property('uri.var.query'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'query=',get-property('uri.var.query'),'&amp;')" />
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.fields') = '' or (not(string(get-property('uri.var.fields'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'fields=',get-property('uri.var.fields'),'&amp;')" />
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.maxResults') = '' or (not(string(get-property('uri.var.maxResults'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'maxResults=',get-property('uri.var.maxResults'),'&amp;')" />
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.pageToken') = '' or (not(string(get-property('uri.var.pageToken'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'pageToken=',get-property('uri.var.pageToken'),'&amp;')" />
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.orderBy') = '' or (not(string(get-property('uri.var.orderBy'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'orderBy=',get-property('uri.var.orderBy'),'&amp;')" />
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.language') = '' or (not(string(get-property('uri.var.language'))))))">
            <then>
                <property name="uri.var.apiParameters" expression="fn:concat(get-property('uri.var.apiParameters'),'language=',get-property('uri.var.language'),'&amp;')" />
            </then>
        </filter>


        <payloadFactory media-type="xml">
            <format>
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                    <soapenv:Header />
                    <soapenv:Body />
                </soapenv:Envelope>
            </format>
            <args />
        </payloadFactory>
        <call>
            <endpoint>
                <http method="GET" uri-template="https://www.googleapis.com/plus/v1/activities?{uri.var.apiParameters}" />
            </endpoint>
        </call>

        <!-- Remove response custom header information -->
        <header name="Cache-Control" scope="transport" action="remove" />
        <header name="Expires" scope="transport" action="remove" />
        <header name="X-Content-Type-Options" scope="transport" action="remove" />
    </sequence>
</template>